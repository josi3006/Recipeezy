{"version":3,"sources":["components/navComponent.js","components/stepsComponent.js","components/ingredientsComponent.js","components/searchComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","useState","showIngredientListIcon","setShowIngredientListIcon","recipeIngredients","className","onClick","resetEverythingButton","showHitListIcon","reShowHitListButton","showIngredientsButton","showRecipeStepsIcon","showRecipeStepsButton","console","log","StepsPage","Object","keys","recipeSteps","map","key","recipeStep","step","number","IngredientsPage","recipeIngredient","originalString","toString","index","id","require","config","SearchPage","searchTerms","setSearchTerms","hitList","setHitList","clickedID","setClickedID","setRecipeIngredients","setRecipeSteps","showSearchBar","setShowSearchBar","showHitList","setShowHitList","showRecipeSteps","setShowRecipeSteps","showIngredientList","setShowIngredientList","setShowHitListIcon","setShowRecipeStepsIcon","useEffect","getRecipeData","searchOptions","method","url","params","query","headers","process","recipeDataCall","axios","request","then","response","data","extendedIngredients","analyzedInstructions","steps","catch","error","makeTheCall","results","window","location","reload","hitItem","title","sourceUrl","placeholder","onChange","event","currentTarget","value","name","aria-label","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQA0CeA,MAtCf,SAAgBC,GAAQ,IAAD,EAEyCC,oBAAS,GAFlD,mBAEZC,EAFY,KAEYC,EAFZ,KAOnB,MAH4B,KAA5BH,EAAMI,kBAA2BD,GAA0B,GAASA,GAA0B,GAK1F,sBAAKE,UAAU,yBAAf,UAII,mBAAGA,UAAU,uBAAuBC,QAASN,EAAMO,wBAGjDP,EAAMQ,gBACJ,mBAAGH,UAAU,uBAAuBC,QAASN,EAAMS,sBAA4B,KAMjFP,EACE,mBAAGG,UAAU,gCAAgCC,QAASN,EAAMU,wBAA8B,KAE5FV,EAAMW,oBACJ,mBAAGN,UAAU,+BAA+BC,QAASN,EAAMY,wBAA8B,KAG7F,wBAAQN,QAAS,kBAAMO,QAAQC,IAAI,kBAAoBd,EAAMW,sBAA7D,yB,gBCKGI,EAnCG,SAACf,GAEf,OAEI,sBAAKK,UAAU,aAAf,UAGI,wBAAQC,QAAS,kBAAMO,QAAQC,IAAI,kBAAoBd,EAAMW,sBAA7D,qBAGA,6BAGQK,OAAOC,KAAKjB,EAAMkB,aAAaC,KAAI,SAACC,GAChC,IAAMC,EAAarB,EAAMkB,YAAYE,GACrC,OACI,8BACI,8BACI,gCACI,6BAAKC,EAAWC,OAAU,6BAH5BD,EAAWE,iBCOlCC,MAtBf,SAAyBxB,GAGvB,OAEE,qBAAKK,UAAU,aAAf,SAEE,6BACGW,OAAOC,KAAKjB,EAAMI,mBAAmBe,KAAI,SAACC,GACzC,IAAMK,EAAmBzB,EAAMI,kBAAkBgB,GACjD,OACE,qCACE,6BAAkEK,EAAiBC,gBAA1EC,SAASF,EAAiBG,MAAQH,EAAiBI,KAA2C,kCCXrHC,EAAQ,IAAUC,SAIlB,IA4MeC,EA5MI,WAAO,IAAD,EAEiB/B,mBAAS,IAF1B,mBAEdgC,EAFc,KAEDC,EAFC,OAGSjC,mBAAS,CAAC,KAHnB,mBAGdkC,EAHc,KAGLC,EAHK,OAIanC,mBAAS,IAJtB,mBAIdoC,EAJc,KAIHC,EAJG,OAK6BrC,mBAAS,CAAC,KALvC,mBAKdG,EALc,KAKKmC,EALL,OAMiBtC,mBAAS,CAAC,KAN3B,mBAMdiB,EANc,KAMDsB,EANC,OAOqBvC,oBAAS,GAP9B,mBAOdwC,EAPc,KAOCC,EAPD,OAQiBzC,oBAAS,GAR1B,mBAQd0C,EARc,KAQDC,EARC,OASyB3C,oBAAS,GATlC,mBASd4C,EATc,KASGC,EATH,OAU+B7C,oBAAS,GAVxC,mBAUd8C,EAVc,KAUMC,EAVN,OAWyB/C,oBAAS,GAXlC,mBAWdO,EAXc,KAWGyC,EAXH,OAYiChD,oBAAS,GAZ1C,mBAYdU,EAZc,KAYOuC,EAZP,KA+BrBC,qBAAU,WALNC,MAOD,CAACf,IAEJ,IA2BMgB,EAAgB,CAClBC,OAAQ,MACRC,IAAK,wDACLC,OAAQ,CACJC,MAAOxB,GAEXyB,QAAS,CACL,iBAAkBC,qDAClB,kBAAmB,mCAMrBC,EAAiB,CACnBN,OAAQ,MACRC,IAAK,kDAAoDlB,EAAY,eACrEqB,QAAS,CACL,iBAAkBC,qDAClB,kBAAmB,mCAMrBP,EAAgB,WAGlBS,IAAMC,QAAQF,GACTG,MAAK,SAACC,GAEHd,GAAuB,GACvBrC,QAAQC,IAAI,iBAAmBH,GAC/B4B,EAAqByB,EAASC,KAAKC,qBACnC1B,EAAewB,EAASC,KAAKE,qBAAqB,GAAGC,UAExDL,MAAK,WAGFnB,GAAe,GACfI,GAAsB,GACtBF,GAAmB,MAEtBuB,OAAM,SAACC,GACJzD,QAAQC,IAAIwD,OAMlBC,GAAc,WAChBV,IAAMC,QAAQT,GACTU,MAAK,SAACC,GACH5B,EAAW4B,EAASC,KAAKO,YAE5BH,OAAM,SAACC,GACJzD,QAAQyD,MAAMA,OAM1B,OAGI,gCAGI,cAAC,EAAD,CACI9D,gBAAiBA,EAEjBG,oBAAqBA,EACrBF,oBAnGgB,WACxBuC,GAAsB,GACtBF,GAAmB,GACnBF,GAAe,IAiGPlC,sBA9FkB,WAC1BkC,GAAe,GACfE,GAAmB,GACnBJ,GAAiB,GACjBM,GAAsB,IA2FdpC,sBAxFkB,WAC1BgC,GAAe,GACfI,GAAsB,GACtBN,GAAiB,GACjBI,GAAmB,IAqFXvC,sBAlFkB,WAC1BkE,OAAOC,SAASC,UAkFRvE,kBAAmBA,IAKrBuC,EACE,qBAAKtC,UAAU,aAAf,SACI,6BACKW,OAAOC,KAAKkB,GAAShB,KAAI,SAACC,GACvB,IAAMwD,EAAUzC,EAAQf,GACxB,OACI,8BAGI,qBAAId,QAAS,kBAAMgC,EAAasC,EAAQ/C,KAAxC,UACK+C,EAAQC,MAAM,uBACf,mBAAGxE,UAAU,UAAb,SAAwBuE,EAAQE,gBAL9BF,EAAQ/C,WAahB,KAIrBkB,EAAqB,cAAC,EAAD,CAAiB3C,kBAAmBA,IAAwB,KAIjFyC,EAAkB,cAAC,EAAD,CAAW3B,YAAaA,IAAkB,KAI5DuB,EACG,iCAEI,qBAAKpC,UAAU,aAAf,SACI,uBACIA,UAAU,yBACV0E,YAAY,SACZC,SAAU,SAACC,GAAD,OAAW/C,EAAe+C,EAAMC,cAAcC,QACxDC,KAAK,cACLvD,GAAG,iBACHsD,MAAOlD,EACPoD,aAAW,8BAKnB,qBACIhF,UAAU,YACVC,QA9KC,WACjB2C,GAAmB,GACnBsB,KACA7B,GAAiB,GACjBE,GAAe,IAwKH,uBAKM,SCrM1Bd,EAAQ,IAAUC,SA2CHuD,MAtCf,WACE,OAGE,qBAAKjF,UAAU,MAAf,SAEE,cAAC,EAAD,OCPSkF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAK1BZ,M","file":"static/js/main.c306c208.chunk.js","sourcesContent":["import './components.css';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nfunction Navbar(props) {\r\n\r\n    const [showIngredientListIcon, setShowIngredientListIcon] = useState(false);\r\n\r\n    props.recipeIngredients === \"\" ? setShowIngredientListIcon(false) : setShowIngredientListIcon(true);\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container-fluid navdiv\">\r\n\r\n            {/* <i className=\"material-icons-outlined icons\" onClick={props.resetEverythingButton}>&#xe88a;</i> */}\r\n\r\n            <i className=\"fi-xnluxl-home icons\" onClick={props.resetEverythingButton}></i>\r\n\r\n\r\n            { props.showHitListIcon ?\r\n                <i className=\"fi-xnluxl-link icons\" onClick={props.reShowHitListButton}></i> : null}\r\n\r\n\r\n            {/* { props.showIngredientListIcon ?\r\n                <i className=\"fi-xnluhl-shopping-cart icons\" onClick={props.showIngredientsButton}></i> : null} */}\r\n\r\n            { showIngredientListIcon ?\r\n                <i className=\"fi-xnluhl-shopping-cart icons\" onClick={props.showIngredientsButton}></i> : null}\r\n\r\n            { props.showRecipeStepsIcon ?\r\n                <i className=\"fi-xnluxl-ordered-list icons\" onClick={props.showRecipeStepsButton}></i> : null}\r\n\r\n\r\n            <button onClick={() => console.log('show me, homie ' + props.showRecipeStepsIcon)}>show me</button>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n\r\n","// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\n\r\nconst StepsPage = (props) => {\r\n\r\n    return (\r\n\r\n        <div className=\"contentdiv\">\r\n\r\n\r\n            <button onClick={() => console.log('show me, homie ' + props.showRecipeStepsIcon)}>show me</button>\r\n\r\n\r\n            < ul >\r\n                {\r\n\r\n                    Object.keys(props.recipeSteps).map((key) => {\r\n                        const recipeStep = props.recipeSteps[key];\r\n                        return (\r\n                            <div key={recipeStep.number}>\r\n                                <div>\r\n                                    <div>\r\n                                        <li>{recipeStep.step}</li><hr />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default StepsPage;","// import logo from './logo.svg';\r\n// import './App.css';\r\nimport React, { useEffect } from \"react\";\r\n\r\n\r\nfunction IngredientsPage(props) {\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"contentdiv\">\r\n\r\n      <ul>\r\n        {Object.keys(props.recipeIngredients).map((key) => {\r\n          const recipeIngredient = props.recipeIngredients[key];\r\n          return (\r\n            <>\r\n              <li key={toString(recipeIngredient.index + recipeIngredient.id)}>{recipeIngredient.originalString}</li><hr />\r\n            </>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default IngredientsPage;","import Navbar from './navComponent';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport StepsPage from './stepsComponent';\r\nimport IngredientsPage from './ingredientsComponent';\r\n\r\nrequire('dotenv').config();\r\n\r\n\r\n\r\nconst SearchPage = () => {\r\n\r\n    const [searchTerms, setSearchTerms] = useState(\"\");\r\n    const [hitList, setHitList] = useState([\"\"]);\r\n    const [clickedID, setClickedID] = useState(\"\");\r\n    const [recipeIngredients, setRecipeIngredients] = useState([\"\"]);\r\n    const [recipeSteps, setRecipeSteps] = useState([\"\"]);\r\n    const [showSearchBar, setShowSearchBar] = useState(true);\r\n    const [showHitList, setShowHitList] = useState(false);\r\n    const [showRecipeSteps, setShowRecipeSteps] = useState(false);\r\n    const [showIngredientList, setShowIngredientList] = useState(false);\r\n    const [showHitListIcon, setShowHitListIcon] = useState(false);\r\n    const [showRecipeStepsIcon, setShowRecipeStepsIcon] = useState(false);\r\n\r\n\r\n\r\n    // Navigation functions triggered by button clicks\r\n\r\n    const searchButton = () => {\r\n        setShowHitListIcon(true);\r\n        makeTheCall();\r\n        setShowSearchBar(false);\r\n        setShowHitList(true);\r\n    };\r\n\r\n    const hitItemClicked = () => {\r\n        getRecipeData();\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        hitItemClicked();\r\n    }, [clickedID]);\r\n\r\n    const reShowHitListButton = () => {\r\n        setShowIngredientList(false);\r\n        setShowRecipeSteps(false);\r\n        setShowHitList(true);\r\n    };\r\n\r\n    const showIngredientsButton = () => {\r\n        setShowHitList(false);\r\n        setShowRecipeSteps(false);\r\n        setShowSearchBar(false);\r\n        setShowIngredientList(true);\r\n    };\r\n\r\n    const showRecipeStepsButton = () => {\r\n        setShowHitList(false);\r\n        setShowIngredientList(false);\r\n        setShowSearchBar(false);\r\n        setShowRecipeSteps(true);\r\n    };\r\n\r\n    const resetEverythingButton = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n\r\n\r\n    // Options to SEARCH the API for recipes\r\n    const searchOptions = {\r\n        method: 'GET',\r\n        url: 'https://webknox-recipes.p.rapidapi.com/recipes/search',\r\n        params: {\r\n            query: searchTerms,\r\n        },\r\n        headers: {\r\n            'x-rapidapi-key': process.env.REACT_APP_API_key,\r\n            'x-rapidapi-host': 'webknox-recipes.p.rapidapi.com'\r\n        }\r\n    };\r\n\r\n\r\n    // Options to Get recipe data after choosing a recipe\r\n    const recipeDataCall = {\r\n        method: 'GET',\r\n        url: 'https://webknox-recipes.p.rapidapi.com/recipes/' + clickedID + '/information',\r\n        headers: {\r\n            'x-rapidapi-key': process.env.REACT_APP_API_key,\r\n            'x-rapidapi-host': 'webknox-recipes.p.rapidapi.com'\r\n        }\r\n    };\r\n\r\n\r\n    // API call to get data for our chosen recipe\r\n    const getRecipeData = () => {\r\n\r\n\r\n        axios.request(recipeDataCall)\r\n            .then((response) => {\r\n                // setShowIngredientListIcon(true);\r\n                setShowRecipeStepsIcon(true);\r\n                console.log('in axios call ' + showRecipeStepsIcon);\r\n                setRecipeIngredients(response.data.extendedIngredients);\r\n                setRecipeSteps(response.data.analyzedInstructions[0].steps);\r\n            })\r\n            .then(() => {\r\n\r\n\r\n                setShowHitList(false);\r\n                setShowIngredientList(true);\r\n                setShowRecipeSteps(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n\r\n    // API call to search all recipes\r\n    const makeTheCall = () => {\r\n        axios.request(searchOptions)\r\n            .then((response) => {\r\n                setHitList(response.data.results);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n\r\n\r\n            <Navbar\r\n                showHitListIcon={showHitListIcon}\r\n                // showIngredientListIcon={showIngredientListIcon}\r\n                showRecipeStepsIcon={showRecipeStepsIcon}\r\n                reShowHitListButton={reShowHitListButton}\r\n                showIngredientsButton={showIngredientsButton}\r\n                showRecipeStepsButton={showRecipeStepsButton}\r\n                resetEverythingButton={resetEverythingButton} \r\n                recipeIngredients={recipeIngredients} />\r\n\r\n\r\n\r\n            {/* This maps SEARCH HIT list to page */}\r\n            { showHitList ?\r\n                <div className=\"contentdiv\">\r\n                    <ul>\r\n                        {Object.keys(hitList).map((key) => {\r\n                            const hitItem = hitList[key];\r\n                            return (\r\n                                <div key={hitItem.id}>\r\n\r\n\r\n                                    <li onClick={() => setClickedID(hitItem.id)}>\r\n                                        {hitItem.title}<br />\r\n                                        <p className=\"urltext\">{hitItem.sourceUrl}</p>\r\n                                    </li>\r\n\r\n\r\n\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </ul></div> : null}\r\n\r\n\r\n            {/* This maps recipe INGREDIENTS list to page */}\r\n            {showIngredientList ? <IngredientsPage recipeIngredients={recipeIngredients} /> : null}\r\n\r\n\r\n            {/* This maps recipe STEPS list to page */}\r\n            {showRecipeSteps ? <StepsPage recipeSteps={recipeSteps} /> : null}\r\n\r\n\r\n            {/* This is the search form */}\r\n            {showSearchBar ?\r\n                <form>\r\n\r\n                    <div className='form-group'>\r\n                        <input\r\n                            className='form-control textinput'\r\n                            placeholder='Search'\r\n                            onChange={(event) => setSearchTerms(event.currentTarget.value)}\r\n                            name='searchterms'\r\n                            id='searchtermsbox'\r\n                            value={searchTerms}\r\n                            aria-label='Enter Search Terms Here'\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div\r\n                        className=\"buttondiv\"\r\n                        onClick={searchButton}>Search\r\n                    </div>\r\n\r\n                </form> : null}\r\n\r\n\r\n\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default SearchPage;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\nimport SearchPage from './components/searchComponent.js';\nimport IngredientsPage from './components/ingredientsComponent.js';\nimport StepsPage from './components/stepsComponent';\nrequire('dotenv').config();\n\n\n\n\nfunction App() {\n  return (\n\n\n    <div className=\"App\">\n\n      <SearchPage />\n\n{/* \n      <Router>\n\n\n        <Route\n          path=\"/\"\n          component={SearchPage}\n          exact\n        />\n\n\n        <Route\n          path=\"/ingredients\"\n          component={IngredientsPage}\n        />\n\n        <Route\n          path=\"/steps\"\n          component={StepsPage}\n        />\n\n      </Router> */}\n\n\n    </div>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// serviceWorker.register();\n\nreportWebVitals();\n"],"sourceRoot":""}