[{"C:\\Users\\John\\git\\Recipeezy\\src\\index.js":"1","C:\\Users\\John\\git\\Recipeezy\\src\\App.js":"2","C:\\Users\\John\\git\\Recipeezy\\src\\reportWebVitals.js":"3","C:\\Users\\John\\git\\Recipeezy\\src\\components\\ingredientsComponent.js":"4","C:\\Users\\John\\git\\Recipeezy\\src\\components\\searchComponent.js":"5","C:\\Users\\John\\git\\Recipeezy\\src\\components\\stepsComponent.js":"6","C:\\Users\\John\\git\\Recipeezy\\src\\components\\navComponent.js":"7"},{"size":417,"mtime":1615411515106,"results":"8","hashOfConfig":"9"},{"size":740,"mtime":1615045839908,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":610,"mtime":1614718948190,"results":"12","hashOfConfig":"9"},{"size":6209,"mtime":1616424391644,"results":"13","hashOfConfig":"9"},{"size":854,"mtime":1616089303623,"results":"14","hashOfConfig":"9"},{"size":1551,"mtime":1616426149008,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"s0tc4w",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\John\\git\\Recipeezy\\src\\index.js",[],["34","35"],"C:\\Users\\John\\git\\Recipeezy\\src\\App.js",["36","37","38","39"],"import './App.css';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\nimport SearchPage from './components/searchComponent.js';\nimport IngredientsPage from './components/ingredientsComponent.js';\nimport StepsPage from './components/stepsComponent';\nrequire('dotenv').config();\n\n\n\n\nfunction App() {\n  return (\n\n\n    <div className=\"App\">\n\n      <SearchPage />\n\n{/* \n      <Router>\n\n\n        <Route\n          path=\"/\"\n          component={SearchPage}\n          exact\n        />\n\n\n        <Route\n          path=\"/ingredients\"\n          component={IngredientsPage}\n        />\n\n        <Route\n          path=\"/steps\"\n          component={StepsPage}\n        />\n\n      </Router> */}\n\n\n    </div>\n\n\n  );\n}\n\nexport default App;\n","C:\\Users\\John\\git\\Recipeezy\\src\\reportWebVitals.js",[],"C:\\Users\\John\\git\\Recipeezy\\src\\components\\ingredientsComponent.js",["40"],"// import logo from './logo.svg';\r\n// import './App.css';\r\nimport React, { useEffect } from \"react\";\r\n\r\n\r\nfunction IngredientsPage(props) {\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"contentdiv\">\r\n\r\n      <ul>\r\n        {Object.keys(props.recipeIngredients).map((key) => {\r\n          const recipeIngredient = props.recipeIngredients[key];\r\n          return (\r\n            <>\r\n              <li key={toString(recipeIngredient.index + recipeIngredient.id)}>{recipeIngredient.originalString}</li><hr />\r\n            </>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default IngredientsPage;","C:\\Users\\John\\git\\Recipeezy\\src\\components\\searchComponent.js",["41"],"import Navbar from './navComponent';\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport StepsPage from './stepsComponent';\nimport IngredientsPage from './ingredientsComponent';\n\nrequire('dotenv').config();\n\n\n\nconst SearchPage = () => {\n\n    const [searchTerms, setSearchTerms] = useState(\"\");\n    const [hitList, setHitList] = useState([\"\"]);\n    const [clickedID, setClickedID] = useState(\"\");\n    const [recipeIngredients, setRecipeIngredients] = useState([\"\"]);\n    const [recipeSteps, setRecipeSteps] = useState([\"\"]);\n    const [showSearchBar, setShowSearchBar] = useState(true);\n    const [showHitList, setShowHitList] = useState(false);\n    const [showRecipeSteps, setShowRecipeSteps] = useState(false);\n    const [showIngredientList, setShowIngredientList] = useState(false);\n    const [showHitListIcon, setShowHitListIcon] = useState(false);\n    const [showRecipeStepsIcon, setShowRecipeStepsIcon] = useState(false);\n    const [showIngredientListIcon, setShowIngredientListIcon] = useState(false);\n\n\n    // Navigation functions triggered by button clicks\n\n    const searchButton = () => {\n        setShowHitListIcon(true);\n        makeTheCall();\n        setShowSearchBar(false);\n        setShowHitList(true);\n    };\n\n    const hitItemClicked = () => {\n        getRecipeData();\n    };\n\n\n\n    useEffect(() => {\n        hitItemClicked();\n    }, [clickedID]);\n\n    const reShowHitListButton = () => {\n        setShowIngredientList(false);\n        setShowRecipeSteps(false);\n        setShowHitList(true);\n    };\n\n    const showIngredientsButton = () => {\n        setShowHitList(false);\n        setShowRecipeSteps(false);\n        setShowSearchBar(false);\n        setShowIngredientList(true);\n    };\n\n    const showRecipeStepsButton = () => {\n        setShowHitList(false);\n        setShowIngredientList(false);\n        setShowSearchBar(false);\n        setShowRecipeSteps(true);\n    };\n\n    const resetEverythingButton = () => {\n        window.location.reload();\n    };\n\n\n\n    // Options to SEARCH the API for recipes\n    const searchOptions = {\n        method: 'GET',\n        url: 'https://webknox-recipes.p.rapidapi.com/recipes/search',\n        params: {\n            query: searchTerms,\n        },\n        headers: {\n            'x-rapidapi-key': process.env.REACT_APP_API_key,\n            'x-rapidapi-host': 'webknox-recipes.p.rapidapi.com'\n        }\n    };\n\n\n    // Options to Get recipe data after choosing a recipe\n    const recipeDataCall = {\n        method: 'GET',\n        url: 'https://webknox-recipes.p.rapidapi.com/recipes/' + clickedID + '/information',\n        headers: {\n            'x-rapidapi-key': process.env.REACT_APP_API_key,\n            'x-rapidapi-host': 'webknox-recipes.p.rapidapi.com'\n        }\n    };\n\n\n    // API call to get data for our chosen recipe\n    const getRecipeData = () => {\n        axios.request(recipeDataCall)\n            .then((response) => {\n                setShowIngredientListIcon(true);\n                setShowRecipeStepsIcon(true);\n                setRecipeIngredients(response.data.extendedIngredients);\n                setRecipeSteps(response.data.analyzedInstructions[0].steps);\n            })\n            .then(() => {\n                setShowHitList(false);\n                setShowIngredientList(true);\n                setShowRecipeSteps(true);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n\n    // API call to search all recipes\n    const makeTheCall = () => {\n        axios.request(searchOptions)\n            .then((response) => {\n                setHitList(response.data.results);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n\n    }\n\n\n    return (\n\n\n        <div>\n\n            <Navbar\n                showHitListIcon={showHitListIcon}\n                showIngredientListIcon={showIngredientListIcon}\n                showRecipeStepsIcon={showRecipeStepsIcon}\n                reShowHitListButton={reShowHitListButton}\n                showIngredientsButton={showIngredientsButton}\n                showRecipeStepsButton={showRecipeStepsButton}\n                resetEverythingButton={resetEverythingButton}\n            />\n\n\n\n            {/* This maps SEARCH HIT list to page */}\n            { showHitList ?\n                <div className=\"contentdiv\">\n                    <ul>\n                        {Object.keys(hitList).map((key) => {\n                            const hitItem = hitList[key];\n                            return (\n                                <div key={hitItem.id}>\n                                    <li onClick={() => setClickedID(hitItem.id)}>\n                                        {hitItem.title}<br />\n                                        <p className=\"urltext\">{hitItem.sourceUrl}</p>\n                                    </li>\n                                </div>\n                            );\n                        })}\n                    </ul></div> : null}\n\n\n\n            {/* This maps recipe INGREDIENTS list to page */}\n            {showIngredientList ? <IngredientsPage recipeIngredients={recipeIngredients} /> : null}\n\n\n            {/* This maps recipe STEPS list to page */}\n            {showRecipeSteps ? <StepsPage recipeSteps={recipeSteps} /> : null}\n\n\n            {/* This is the search form */}\n            {showSearchBar ?\n                <form>\n                    <div className='form-group'>\n                        <input\n                            className='form-control textinput'\n                            placeholder='Search'\n                            onChange={(event) => setSearchTerms(event.currentTarget.value)}\n                            name='searchterms'\n                            id='searchtermsbox'\n                            value={searchTerms}\n                            aria-label='Enter Search Terms Here'\n                        />\n                    </div>\n\n                    <div\n                        className=\"buttondiv\"\n                        onClick={searchButton}>Search\n                    </div>\n                    \n                </form> : null}\n\n\n\n        </div >\n\n    );\n}\n\nexport default SearchPage;","C:\\Users\\John\\git\\Recipeezy\\src\\components\\stepsComponent.js",[],"C:\\Users\\John\\git\\Recipeezy\\src\\components\\navComponent.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":3,"column":20,"nodeType":"48","messageId":"49","endLine":3,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":4,"column":3,"nodeType":"48","messageId":"49","endLine":4,"endColumn":8},{"ruleId":"46","severity":1,"message":"51","line":7,"column":8,"nodeType":"48","messageId":"49","endLine":7,"endColumn":23},{"ruleId":"46","severity":1,"message":"52","line":8,"column":8,"nodeType":"48","messageId":"49","endLine":8,"endColumn":17},{"ruleId":"46","severity":1,"message":"53","line":3,"column":17,"nodeType":"48","messageId":"49","endLine":3,"endColumn":26},{"ruleId":"54","severity":1,"message":"55","line":44,"column":8,"nodeType":"56","endLine":44,"endColumn":19,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'IngredientsPage' is defined but never used.","'StepsPage' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'hitItemClicked'. Either include it or remove the dependency array.","ArrayExpression",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [clickedID, hitItemClicked]",{"range":"63","text":"64"},[1386,1397],"[clickedID, hitItemClicked]"]